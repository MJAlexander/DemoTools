% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nAx.R
\name{lt_a_un}
\alias{lt_a_un}
\title{UN a(x) estimates from either M(x), q(x), or both}
\usage{
lt_a_un(
  nMx,
  nqx,
  lx,
  IMR = NA,
  Age,
  AgeInt,
  a0rule = "ak",
  Sex = "m",
  region = "w",
  SRB = 1.05,
  tol = .Machine$double.eps,
  maxit = 1000,
  mod = TRUE,
  extrapLaw = "kannisto",
  extrapFrom = max(Age),
  extrapFit = Age[Age >= 60],
  ...
)
}
\arguments{
\item{nMx}{numeric. Event exposure mortality rates.}

\item{nqx}{numeric.  Vector of age specific death probabilities in standard abridged age groups.}

\item{lx}{numeric. Vector of lifetable survivorship in standard abridged age groups.}

\item{IMR}{numeric. Optional. {\ifelse{html}{\out{q<sub>0</sub>}}{\eqn{q_0}}}, the death probability in first year of life, in case available separately.}

\item{Age}{integer. A vector of ages of the lower integer bound of the age classes.}

\item{AgeInt}{integer. Vector of age interval widths.}

\item{a0rule}{character. Either \code{"ak"} (default) or \code{"cd"}.}

\item{Sex}{character. \code{"m"}, \code{"f"} or \code{"b"} for male, female, or both.}

\item{region}{character. \code{"n"}, \code{"e"}, \code{"s"} or \code{"w"} for North, East, South, or West.}

\item{SRB}{numeric. The sex ratio at birth (boys/girls), default 1.05.}

\item{tol}{numeric. The tolerance for the qx-based iterative method. Default \code{.Machine$double.eps}.}

\item{maxit}{integer. The maximum number of iterations for the qx-based iterative method. Default 1000.}

\item{mod}{logical.  Whether or not to use Gerland's modification for ages 5-14. Default \code{TRUE}.}

\item{extrapLaw}{character. If extrapolating, which parametric mortality law should be invoked? Options include  \code{"Kannisto", "Kannisto_Makeham", "Makeham","Gompertz", "GGompertz", "Beard",    "Beard_Makeham", "Quadratic"}. Default \code{"Kannisto"}. See details.}

\item{extrapFrom}{integer. Age from which to impute extrapolated mortality.}

\item{extrapFit}{integer vector. Ages to include in model fitting. Defaults to all ages \code{>          =60}.}

\item{...}{Other arguments to be passed on to the
\code{\link[MortalityLaws]{MortalityLaw}} function.}
}
\value{
nax average contribution to exposure of those dying in the interval.
}
\description{
The UN a(x) formula uses Coale-Demeny for ages 0, and 1-4, values of 2.5 for ages 5-9 and 10-14, and the Greville formula for higher ages. In the original sources these are referred to as separation factors.
}
\details{
a(x) for age 0 and age group 1-4 are based on Coale-Demeny {\ifelse{html}{\out{q<sub>0</sub>}}{\eqn{q_0}}}-based lookup tables. If the main input is \code{nMx}, and if \code{IMR} is not given, we first approximate {\ifelse{html}{\out{q<sub>0</sub>}}{\eqn{q_0}}} for the Coale-Demeny approach before applying the formula. The final a(x) value is closed out using the \code{lt_a_closeout()} method (reciprocal and Mortpak methods are deprecated). For nMx inputs this method is rather direct, but for {\ifelse{html}{\out{q<sub>X</sub>}}{\eqn{q_X}}} or l(x) inputs it is iterative. Age groups must be standard abridged.  No check on age groups are done.
}
\examples{
# example data from UN 1982 Model Life Tables for Developing Countries.
# first Latin American model table for males (p. 34).
Mx <- c(.23669,.04672,.00982,.00511,.00697,.01036,.01169,
		.01332,.01528,.01757,.02092,.02517,.03225,.04241,.06056,
		.08574,.11840,.16226,.23745)
ax <- c(0.330,1.352,2.500,2.500,2.633,2.586,2.528,2.528,
		2.526,2.529,2.531,2.538,2.542,2.543,2.520,2.461,2.386,2.295,4.211)

AgeInt     <- inferAgeIntAbr(vec = Mx)
Age <- int2age(AgeInt)
nAx1       <- lt_a_un(nMx = Mx,
                   Age = Age,
		                AgeInt = AgeInt,
		                a0rule = "cd",
		                Sex = "m",
				          region = "w",
		                mod = FALSE)
nAx2       <- lt_a_un(nMx = Mx,
                   Age = Age,
		                AgeInt = AgeInt,
		                a0rule = "cd",
		                Sex = "m",
				          region = "w",
		                mod = TRUE)
# this is acceptable...
round(nAx2,3) - ax # only different in ages 5-9 and 10-14, and last two ages
# ignore open age, which is treated differently
N <- length(ax)
# default unit test...
stopifnot(all(round(nAx1[Age<80],3) - ax[Age<80] == 0)) # spot on

# another example:

nMx <- c(0.11621,0.02268,0.00409,0.00212,0.00295,
         0.00418,0.00509,0.00609,0.00714,0.00808,
         0.00971,0.0125,0.0175,0.02551,0.03809,
         0.05595,0.0809,0.15353,0.2557)
AgeInt <- inferAgeIntAbr(vec = nMx)
Age    <- int2age(AgeInt)
nAx1   <- lt_a_un(nMx, 
                  Age = Age,
                  AgeInt = AgeInt, 
                  a0rule = "ak",
                  mod = TRUE, 
                  closeout = TRUE)

nqx    <- lt_id_ma_q(nMx = nMx, 
                     nax = nAx1, 
                     AgeInt = AgeInt, 
                     closeout = FALSE)
nAx2 <- lt_a_un(nqx = nqx, 
                Age = Age,
                AgeInt = AgeInt, 
                a0rule = "ak", 
                mod= TRUE, 
                closeout = TRUE)

stopifnot(all(abs(nAx1[Age<75] - nAx2[Age<75]) < 1e-7))

}
\references{
\insertRef{greville1977short}{DemoTools}
\insertRef{un1982model}{DemoTools}
\insertRef{arriaga1994population}{DemoTools}
\insertRef{mortpak1988}{DemoTools}
}
